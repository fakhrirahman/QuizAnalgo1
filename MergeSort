#include <stdlib.h> 
#include <stdio.h> 
#include <iostream>
#include <time.h>

using namespace std;

void merge(int arr[], int l, int m, int r) 
{ 
	int i, j, k; 
	int n1 = m - l + 1; 
	int n2 = r - m; 

	int L[n1], R[n2]; 

	for (i = 0; i < n1; i++) 

		L[i] = arr[l + i]; 

	for (j = 0; j < n2; j++) 

		R[j] = arr[m + 1+ j]; 


	i = 0;
	j = 0;
	k = l;
	while (i < n1 && j < n2) 
	{ 
		if (L[i] <= R[j]) 
		{ 
			arr[k] = L[i]; 
			i++; 
		} 

		else
		{ 
			arr[k] = R[j]; 
			j++; 
		} 
		k++; 
	} 

	while (i < n1) 
	{ 
		arr[k] = L[i]; 
		i++; 
		k++; 
	} 
	while (j < n2) 
	{ 
		arr[k] = R[j]; 
		j++; 
		k++; 
	} 
} 

void mergeSort(int arr[], int l, int r) 
{ 
	if (l < r) 
	{ 
		int m = l+(r-l)/2; 

		mergeSort(arr, l, m); 
		mergeSort(arr, m+1, r); 

		merge(arr, l, m, r); 
	} 
} 

void printArray(int A[], int size) 
{ 
	int i; 
	for (i=0; i < size; i++) 
		cout << A[i] << " "; 
	cout << endl; 
} 

int main() 
{ 
	int arr_size; 

    cout << "Jumlah Data : ";
    cin >> arr_size;
    int arr[arr_size];

    for (int i = 0; i < arr_size; i++) {
        cout << "Indeks ke-" << i << " : ";
        cin >> arr[i];
    }

	cout << "Array : ";
	printArray(arr, arr_size); 

    clock_t t1,t2;
    t1=clock();

	mergeSort(arr, 0, arr_size - 1); 

    t2=clock();
    float diff ((float)t2-(float)t1);
    cout << "Runtime : " << diff << " ms" << endl;

	cout << "Sorted array : ";
	printArray(arr, arr_size); 
	return 0; 

} 
